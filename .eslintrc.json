{
  "extends": [
    "eslint:recommended",
    "next/core-web-vitals",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:@typescript-eslint/strict",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "prettier",
    "plugin:jest-dom/recommended",
    "plugin:testing-library/react"
  ],
  "plugins": [
    "prettier",
    "jest-dom",
    "testing-library"
  ],
  "rules": {
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/member-ordering": "warn",
    "@typescript-eslint/method-signature-style": "error",
    "@typescript-eslint/naming-convention": ["error", {
      "selector": "enumMember",
      "format": ["PascalCase"]
    }],
    "@typescript-eslint/no-confusing-void-expression": ["error", {
      "ignoreArrowShorthand": true
    }],
    "@typescript-eslint/no-duplicate-type-constituents": "warn",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-require-imports": "warn",
    "@typescript-eslint/no-unnecessary-qualifier": "warn",
    "@typescript-eslint/no-useless-empty-export": "error",
    "@typescript-eslint/no-unused-vars": ["error", {
      "argsIgnorePattern": "^_"
    }],
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/require-array-sort-compare": "warn",
    "@typescript-eslint/sort-type-constituents": "warn",
    "@typescript-eslint/strict-boolean-expressions": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "prettier/prettier": "error"
  },
  "ignorePatterns": ["/*", "!/src", "!/test"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./"
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  },
  "overrides": [
    {
      "files": ["*.tsx", "*.jsx"],
      "rules": {
        "@typescript-eslint/naming-convention": "off"
      }
    }
  ]
}
